{"ast":null,"code":"var _jsxFileName = \"/Users/user/code/barksanto/weather-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst API = {\n  key: '364545f834bbb6e7f867173e9f886040',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\nconsole.log(process.env.REACT_APP_API_KEY);\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    if (event.key === \"Enter\" || event.type === 'click') {\n      console.log(event);\n      fetch(`${API.base}weather?q=${query}&units=imperial&APPID=${API.key}`).then(result => result.json()).then(res => {\n        setQuery('');\n        setWeather(res);\n        console.log(res);\n      });\n    }\n  }; // const testSearch = (event) => {\n  //   console.log(event);\n  // }\n\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate(); // returns a number between 0-30\n\n    let month = months[d.getMonth()]; //returns # between 0 and 11\n\n    let year = d.getFullYear();\n    return `${day} - ${date}/ ${month}/ ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 60 ? 'app warm' : 'app' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search,\n          className: \"col-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-secondary col-2 search-button\",\n          onClick: search,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            s: true,\n            rc: \"https://img.icons8.com/emoji/32/000000/magnifying-glass-tilted-right-emoji.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [\"Description: \", weather.weather[0].description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/code/barksanto/weather-react/src/App.js"],"names":["React","useState","require","config","API","key","base","console","log","process","env","REACT_APP_API_KEY","App","query","setQuery","weather","setWeather","search","event","type","fetch","then","result","json","res","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nrequire('dotenv').config()\n\nconst API = {\n  key: '364545f834bbb6e7f867173e9f886040',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nconsole.log(process.env.REACT_APP_API_KEY)\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    if (event.key === \"Enter\" || event.type === 'click') {\n      console.log(event)\n      fetch(`${API.base}weather?q=${query}&units=imperial&APPID=${API.key}`)\n        .then(result => result.json())\n        .then(res => {\n          setQuery('');\n          setWeather(res);\n          console.log(res);\n        });\n    }\n  }\n\n  // const testSearch = (event) => {\n  //   console.log(event);\n  // }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate() // returns a number between 0-30\n    let month = months[d.getMonth()]; //returns # between 0 and 11\n\n    let year = d.getFullYear();\n\n    return `${day} - ${date}/ ${month}/ ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 60) ? 'app warm' : 'app') : 'app'}>\n      <main className=\"container\">\n        <div className=\"search-box row\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            className=\"col-10\" />\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary col-2 search-button\"\n            onClick={search}>\n            <img alt=\"\"s rc=\"https://img.icons8.com/emoji/32/000000/magnifying-glass-tilted-right-emoji.png\" />\n          </button>\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}°F</div>\n              <div className=\"weather\">Description: {weather.weather[0].description}</div>\n\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}