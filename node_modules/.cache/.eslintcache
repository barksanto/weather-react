[{"/Users/user/code/barksanto/weather-react/src/index.js":"1","/Users/user/code/barksanto/weather-react/src/reportWebVitals.js":"2","/Users/user/code/barksanto/weather-react/src/App.js":"3"},{"size":500,"mtime":1616441646906,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1616441646908,"results":"6","hashOfConfig":"5"},{"size":2651,"mtime":1616864389588,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"10p2xpv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/user/code/barksanto/weather-react/src/index.js",[],["16","17"],"/Users/user/code/barksanto/weather-react/src/reportWebVitals.js",[],"/Users/user/code/barksanto/weather-react/src/App.js",["18"],"import React, { useState } from 'react';\nimport './App.css';\nrequire('dotenv').config()\n\nconst API = {\n  key: '364545f834bbb6e7f867173e9f886040',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nconst API_KEY = (process.env.REACT_APP_API_KEY)\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    if (event.key === \"Enter\" || event.type === 'click') {\n      console.log(event)\n      fetch(`${API.base}weather?q=${query}&units=imperial&APPID=${API_KEY}`)\n        .then(result => result.json())\n        .then(res => {\n          setQuery('');\n          setWeather(res);\n          console.log(res);\n        });\n    }\n  }\n\n  // const testSearch = (event) => {\n  //   console.log(event);\n  // }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate() // returns a number between 0-30\n    let month = months[d.getMonth()]; //returns # between 0 and 11\n\n    let year = d.getFullYear();\n\n    return `${day} - ${date}/ ${month}/ ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 60) ? 'app warm' : 'app') : 'app'}>\n      <main className=\"container\">\n        <div className=\"search-box row\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            className=\"col-10\" />\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary col-2 search-button\"\n            onClick={search}>\n            <img alt=\"magnifying glass\" src=\"https://img.icons8.com/emoji/32/000000/magnifying-glass-tilted-right-emoji.png\" />\n          </button>\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°F</div>\n              <div className=\"weather\">Description: {weather.weather[0].description}</div>\n\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":58,"column":13,"nodeType":"25","endLine":58,"endColumn":31},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]